/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YourCollectible,
  YourCollectibleInterface,
} from "../YourCollectible";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CreatedNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_svg",
        type: "string",
      },
    ],
    name: "mintItem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "svg",
        type: "string",
      },
    ],
    name: "svgToImageURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052620000134262015180620001a4565b6008553480156200002357600080fd5b5060408051808201825260078152664c6f6f6769657360c81b6020808301918252835180850190945260048452634c4f4f4760e01b9084015281519192916200006f91600091620000fe565b50805162000085906001906020840190620000fe565b505050620000a26200009c620000a860201b60201c565b620000ac565b62000208565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010c90620001cb565b90600052602060002090601f0160209004810192826200013057600085556200017b565b82601f106200014b57805160ff19168380011785556200017b565b828001600101855582156200017b579182015b828111156200017b5782518255916020019190600101906200015e565b50620001899291506200018d565b5090565b5b808211156200018957600081556001016200018e565b60008219821115620001c657634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620001e057607f821691505b602082108114156200020257634e487b7160e01b600052602260045260246000fd5b50919050565b61196280620002186000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde14610239578063c75458491461024c578063c87b56dd1461025f578063e985e9c514610272578063f2fde38b146102ae57600080fd5b8063715018a6146102055780638da5cb5b1461020d57806395d89b411461021e578063a22cb4651461022657600080fd5b806323b872dd116100e957806323b872dd1461019857806330d871c6146101ab57806342842e0e146101be5780636352211e146101d157806370a08231146101e457600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004611271565b6102c1565b60405190151581526020015b60405180910390f35b61014b610313565b60405161013a91906112ed565b61016b610166366004611300565b6103a5565b6040516001600160a01b03909116815260200161013a565b610196610191366004611335565b6103cc565b005b6101966101a636600461135f565b6104e7565b61014b6101b9366004611427565b610518565b6101966101cc36600461135f565b6105ab565b61016b6101df366004611300565b6105c6565b6101f76101f2366004611470565b610626565b60405190815260200161013a565b6101966106ac565b6006546001600160a01b031661016b565b61014b6106c0565b61019661023436600461148b565b6106cf565b6101966102473660046114c7565b6106de565b6101f761025a366004611427565b610716565b61014b61026d366004611300565b6107d5565b61012e610280366004611543565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101966102bc366004611470565b6108af565b60006001600160e01b031982166380ac58cd60e01b14806102f257506001600160e01b03198216635b5e139f60e01b145b8061030d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032290611576565b80601f016020809104026020016040519081016040528092919081815260200182805461034e90611576565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b5050505050905090565b60006103b082610928565b506000908152600460205260409020546001600160a01b031690565b60006103d7826105c6565b9050806001600160a01b0316836001600160a01b0316141561044a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061046657506104668133610280565b6104d85760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610441565b6104e28383610987565b505050565b6104f133826109f5565b61050d5760405162461bcd60e51b8152600401610441906115b1565b6104e2838383610a74565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152509050600061057e8460405160200161056a91906115ff565b604051602081830303815290604052610c10565b9050818160405160200161059392919061161b565b60405160208183030381529060405292505050919050565b6104e2838383604051806020016040528060008152506106de565b6000818152600260205260408120546001600160a01b03168061030d5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610441565b60006001600160a01b0382166106905760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610441565b506001600160a01b031660009081526003602052604090205490565b6106b4610d78565b6106be6000610dd2565b565b60606001805461032290611576565b6106da338383610e24565b5050565b6106e833836109f5565b6107045760405162461bcd60e51b8152600401610441906115b1565b61071084848484610ef3565b50505050565b600060085442106107585760405162461bcd60e51b815260206004820152600c60248201526b444f4e45204d494e54494e4760a01b6044820152606401610441565b600061076360075490565b905061076e83610518565b6000828152600960209081526040909120825161079193919291909101906111c2565b5061079c3382610f26565b60405181907f72102923c3d44433bd725cb2c744a4c92a536ad249b665dec9853a16ed66552590600090a261030d600780546001019055565b6000818152600260205260409020546060906001600160a01b03166108295760405162461bcd60e51b815260206004820152600a602482015269139bdb9948195e1a5cdd60b21b6044820152606401610441565b60408051808201909152601d81527f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000006020820152610888610868610313565b600085815260096020908152604091829020915161056a9392910161164a565b60405160200161089992919061161b565b6040516020818303038152906040529050919050565b6108b7610d78565b6001600160a01b03811661091c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610441565b61092581610dd2565b50565b6000818152600260205260409020546001600160a01b03166109255760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610441565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109bc826105c6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a01836105c6565b9050806001600160a01b0316846001600160a01b03161480610a4857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a6c5750836001600160a01b0316610a61846103a5565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a87826105c6565b6001600160a01b031614610aeb5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610441565b6001600160a01b038216610b4d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610441565b610b58600082610987565b6001600160a01b0383166000908152600360205260408120805460019290610b819084906117d0565b90915550506001600160a01b0382166000908152600360205260408120805460019290610baf9084906117e7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6060815160001415610c3057505060408051602081019091526000815290565b60006040518060600160405280604081526020016118ed6040913990506000600384516002610c5f91906117e7565b610c6991906117ff565b610c74906004611821565b90506000610c838260206117e7565b67ffffffffffffffff811115610c9b57610c9b61139b565b6040519080825280601f01601f191660200182016040528015610cc5576020820181803683370190505b509050818152600183018586518101602084015b81831015610d335760039283018051603f601282901c811687015160f890811b8552600c83901c8216880151811b6001860152600683901c8216880151811b60028601529116860151901b93820193909352600401610cd9565b600389510660018114610d4d5760028114610d5e57610d6a565b613d3d60f01b600119830152610d6a565b603d60f81b6000198301525b509398975050505050505050565b6006546001600160a01b031633146106be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610441565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610e865760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610441565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610efe848484610a74565b610f0a84848484610f40565b6107105760405162461bcd60e51b815260040161044190611840565b6106da82826040518060200160405280600081525061104d565b60006001600160a01b0384163b1561104257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f84903390899088908890600401611892565b602060405180830381600087803b158015610f9e57600080fd5b505af1925050508015610fce575060408051601f3d908101601f19168201909252610fcb918101906118cf565b60015b611028573d808015610ffc576040519150601f19603f3d011682016040523d82523d6000602084013e611001565b606091505b5080516110205760405162461bcd60e51b815260040161044190611840565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a6c565b506001949350505050565b6110578383611080565b6110646000848484610f40565b6104e25760405162461bcd60e51b815260040161044190611840565b6001600160a01b0382166110d65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610441565b6000818152600260205260409020546001600160a01b03161561113b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610441565b6001600160a01b03821660009081526003602052604081208054600192906111649084906117e7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546111ce90611576565b90600052602060002090601f0160209004810192826111f05760008555611236565b82601f1061120957805160ff1916838001178555611236565b82800160010185558215611236579182015b8281111561123657825182559160200191906001019061121b565b50611242929150611246565b5090565b5b808211156112425760008155600101611247565b6001600160e01b03198116811461092557600080fd5b60006020828403121561128357600080fd5b813561128e8161125b565b9392505050565b60005b838110156112b0578181015183820152602001611298565b838111156107105750506000910152565b600081518084526112d9816020860160208601611295565b601f01601f19169290920160200192915050565b60208152600061128e60208301846112c1565b60006020828403121561131257600080fd5b5035919050565b80356001600160a01b038116811461133057600080fd5b919050565b6000806040838503121561134857600080fd5b61135183611319565b946020939093013593505050565b60008060006060848603121561137457600080fd5b61137d84611319565b925061138b60208501611319565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156113cc576113cc61139b565b604051601f8501601f19908116603f011681019082821181831017156113f4576113f461139b565b8160405280935085815286868601111561140d57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561143957600080fd5b813567ffffffffffffffff81111561145057600080fd5b8201601f8101841361146157600080fd5b610a6c848235602084016113b1565b60006020828403121561148257600080fd5b61128e82611319565b6000806040838503121561149e57600080fd5b6114a783611319565b9150602083013580151581146114bc57600080fd5b809150509250929050565b600080600080608085870312156114dd57600080fd5b6114e685611319565b93506114f460208601611319565b925060408501359150606085013567ffffffffffffffff81111561151757600080fd5b8501601f8101871361152857600080fd5b611537878235602084016113b1565b91505092959194509250565b6000806040838503121561155657600080fd5b61155f83611319565b915061156d60208401611319565b90509250929050565b600181811c9082168061158a57607f821691505b602082108114156115ab57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60008251611611818460208701611295565b9190910192915050565b6000835161162d818460208801611295565b835190830190611641818360208801611295565b01949350505050565b683d913730b6b2911d1160b91b8152825160009060206116708260098601838901611295565b7f222c20226465736372697074696f6e223a22416e204e46542066726f6d206b636009928501928301526603832b6329116160cd1b60298301527f2261747472696275746573223a205b7b2274726169745f74797065223a20226360308301527f6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d616765605083015262111d1160e91b60708301528454607390600090600181811c908083168061171f57607f831692505b86831081141561173d57634e487b7160e01b85526022600452602485fd5b808015611751576001811461176657611797565b60ff1985168988015283890187019550611797565b60008c81526020902060005b8581101561178d5781548b82018a0152908401908901611772565b505086848a010195505b50505050506117ae8161227d60f01b815260020190565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156117e2576117e26117ba565b500390565b600082198211156117fa576117fa6117ba565b500190565b60008261181c57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561183b5761183b6117ba565b500290565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118c5908301846112c1565b9695505050505050565b6000602082840312156118e157600080fd5b815161128e8161125b56fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122066eeabc4a5ed9cc206ceaac329ddb8108d42b2bbfb2a300f623a52d3a8a0036064736f6c63430008090033";

type YourCollectibleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourCollectibleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourCollectible__factory extends ContractFactory {
  constructor(...args: YourCollectibleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YourCollectible";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YourCollectible> {
    return super.deploy(overrides || {}) as Promise<YourCollectible>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YourCollectible {
    return super.attach(address) as YourCollectible;
  }
  connect(signer: Signer): YourCollectible__factory {
    return super.connect(signer) as YourCollectible__factory;
  }
  static readonly contractName: "YourCollectible";
  public readonly contractName: "YourCollectible";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourCollectibleInterface {
    return new utils.Interface(_abi) as YourCollectibleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourCollectible {
    return new Contract(address, _abi, signerOrProvider) as YourCollectible;
  }
}
